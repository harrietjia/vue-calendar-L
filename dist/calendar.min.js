(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ __webpack_exports__["a"] = ({
	props: {
		options: {
			type: Object,
			default: function () {
				return {
					header_bg_color: "#ffffff",
					header_font_color: "#ffa300",
					week_font_color: "#333333",
					selected_bg_color: "#f49f19",
					today_bg_color: "#f9d08f",
					event_dot_color: "#083ce4"
				};
			}
		},
		// 默认选择日期
		value: {
			type: Array,
			default: function () {
				return [];
			}
		},
		// 开始选择日期
		begin: {
			type: Array,
			default: function () {
				return [];
			}
		},
		// 结束选择日期
		end: {
			type: Array,
			default: function () {
				return [];
			}
		},
		// 是否小于10补零
		zero: {
			type: Boolean,
			default: true
		},
		// 屏蔽的日期
		disabled: {
			type: Array,
			default: function () {
				return [];
			}
		},
		// 是否显示农历
		lunar: {
			type: Boolean,
			default: false
		},

		// 自定义星期名称
		weeks: {
			type: Array,
			default: function () {
				return window.navigator.language.toLowerCase() == "zh-cn" ? ["日", "一", "二", "三", "四", "五", "六"] : ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
			}
		},
		// 自定义月份名称
		months: {
			type: Array,
			default: function () {
				return window.navigator.language.toLowerCase() == "zh-cn" ? ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"] : ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
			}
		},
		// 自定义事件
		events: {
			type: Array,
			default: function () {
				return [];
			}
		}
	},
	data() {
		return {
			year: 0,
			month: 0,
			day: 0,
			days: [],
			lastDays: [],
			nextDays: [],
			selectedDate: [],
			festival: {
				lunar: {
					"1-1": "春节",
					"1-15": "元宵节",
					"2-2": "龙头节",
					"5-5": "端午节",
					"7-7": "七夕节",
					"7-15": "中元节",
					"8-15": "中秋节",
					"9-9": "重阳节",
					"10-1": "寒衣节",
					"10-15": "下元节",
					"12-8": "腊八节",
					"12-23": "祭灶节"
				},
				gregorian: {
					"1-1": "元旦",
					"2-14": "情人节",
					"3-8": "妇女节",
					"3-12": "植树节",
					"4-5": "清明节",
					"5-1": "劳动节",
					"5-4": "青年节",
					"6-1": "儿童节",
					"7-1": "建党节",
					"8-1": "建军节",
					"9-10": "教师节",
					"10-1": "国庆节",
					"12-24": "平安夜",
					"12-25": "圣诞节"
				}
			},
			startPos: {},
			endPos: {},
			isScrolling: 0,
			translateX: 0,
			calendarBox: null,
			wrapper: null,
			tdH: 46
		};
	},
	computed: {
		nowDay() {
			return this.year + "-" + this.zeroPad(parseInt(this.month) + 1);
		}
	},
	watch: {
		events() {
			this.days = this.render(this.year, this.month, true);
		},
		value() {
			this.init();
		}
	},
	mounted() {
		this.calendarBox = document.getElementsByClassName("calendar-box")[0];
		this.wrapper = document.getElementsByClassName("wrapper")[0];
		this.init();
		// console.log(this.calendarBox.clientWidth);
		this.tdH = Math.round(this.calendarBox.clientWidth / 7);
	},
	methods: {
		preMonth() {
			this.wrapper.style.transition = "all 300ms ease";
			this.wrapper.style.transform = "translateX(" + 0 + "px)";
			this.resetTransition("left");
		},
		nextMonth() {
			this.wrapper.style.transition = "all 300ms ease";
			this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth * 2 + "px)";
			this.resetTransition("right");
		},
		init() {
			let now = new Date();
			this.year = now.getFullYear();
			this.month = now.getMonth();
			this.day = now.getDate();
			if (this.value.length > 0) {
				this.year = parseInt(this.value[0]);
				this.month = parseInt(this.value[1]) - 1;
				this.day = parseInt(this.value[2]);
			}
			this.days = this.render(this.year, this.month, true);
			this.nextDays = this.next();
			this.lastDays = this.prev();

			this.$emit("monthChanged", this.year + "-" + this.zeroPad(this.month + 1));

			//  listener touch event
			this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth + "px" + ")";
			this.calendarBox.addEventListener("touchstart", e => {
				this.startPos = this.endPos = { x: 0, y: 0 };
				let touch = e.targetTouches[0]; //touches数组对象获得屏幕上所有的touch，取第一个touch
				this.startPos = { x: touch.pageX, y: touch.pageY, time: +new Date() }; //取第一个touch的坐标值
				const tranStr = this.wrapper.style.transform;
				if (tranStr) {
					this.translateX = Number(tranStr.substring(11, tranStr.length - 3));
				} else {
					this.translateX = 0;
				}
				this.calendarBox.addEventListener("touchmove", this.touchmove, false);
				this.calendarBox.addEventListener("touchend", this.touchend, false);
			}, false);
		},
		// 渲染日期
		render(y, m, isCurrentMonth = false) {
			let firstDayOfMonth = new Date(y, m, 1).getDay(); //当月第一天
			let lastDateOfMonth = new Date(y, m + 1, 0).getDate(); //当月最后一天
			let lastDayOfLastMonth = new Date(y, m, 0).getDate(); //最后一月的最后一天
			let i,
			    line = 0,
			    temp = [],
			    nextMonthPushDays = 1;
			for (i = 1; i <= lastDateOfMonth; i++) {
				let day = new Date(y, m, i).getDay(); //返回星期几（0～6）
				let k;
				// 第一行
				if (day == 0) {
					temp[line] = [];
				} else if (i == 1) {
					temp[line] = [];
					k = lastDayOfLastMonth - firstDayOfMonth + 1;
					for (let j = 0; j < firstDayOfMonth; j++) {
						temp[line].push(Object.assign({ day: k, disabled: true },
						// this.getLunarInfo(this.computedPrevYear(),this.computedPrevMonth(true),k),
						isCurrentMonth ? this.getEvents(this.computedPrevYear(), this.computedPrevMonth(true), k) : {}, this.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, k)));
						k++;
					}
				}

				let chk = new Date();
				let chkY = chk.getFullYear();
				let chkM = chk.getMonth();
				let chkD = chk.getDate();
				// 匹配上次选中的日期
				if (this.selectedDate.length == 3 && y == this.selectedDate[0] && m == this.selectedDate[1] && i == this.selectedDate[2]) {
					temp[line].push(Object.assign({ day: i, selected: true },
					// this.getLunarInfo(y, m, i),
					isCurrentMonth ? this.getEvents(y, m, i) : {}, this.isToday(y, m, i)));
				} else if (this.selectedDate.length != 3 && chkY == this.year && chkM == this.month && i == this.day && this.value.length === 0) {
					// 没有默认值的时候显示选中今天日期
					temp[line].push(Object.assign({ day: i, selected: true },
					// this.getLunarInfo(y, m, i),
					isCurrentMonth ? this.getEvents(y, m, i) : {}, this.isToday(y, m, i)));
					this.selectedDate = [this.year, this.month, this.day];
				} else {
					// 普通日期
					let options = Object.assign({ day: i, selected: false },
					// this.getLunarInfo(y, m, i),
					isCurrentMonth ? this.getEvents(y, m, i) : {}, this.isToday(y, m, i));
					if (this.begin.length > 0) {
						let beginTime = Number(new Date(parseInt(this.begin[0]), parseInt(this.begin[1]), parseInt(this.begin[2])));
						if (beginTime > Number(new Date(this.year, this.month, i))) options.disabled = true;
					}
					if (this.end.length > 0) {
						let endTime = Number(new Date(parseInt(this.end[0]), parseInt(this.end[1]) - 1, parseInt(this.end[2])));
						if (endTime < Number(new Date(this.year, this.month, i))) options.disabled = true;
					}
					if (this.disabled.length > 0) {
						if (this.disabled.filter(v => {
							return this.year === v[0] && this.month === v[1] - 1 && i === v[2];
						}).length > 0) {
							options.disabled = true;
						}
					}
					// if(Number(new Date(this.year, this.month, i)) < Number(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()))){
					//   options.disabled = true;
					// }
					temp[line].push(options);
				}
				// 到周六换行
				if (day == 6 && i < lastDateOfMonth) {
					line++;
				} else if (i == lastDateOfMonth) {
					// line++
					let k = 1;
					for (let d = day; d < 6; d++) {
						temp[line].push(Object.assign({ day: k, disabled: true },
						// this.getLunarInfo(this.computedNextYear(),this.computedNextMonth(true),k),
						isCurrentMonth ? this.getEvents(this.computedNextYear(), this.computedNextMonth(true), k) : {}, this.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, d)));
						k++;
					}
					// 下个月除了补充的前几天开始的日期
					nextMonthPushDays = k;
				}
			} //end for

			// 补充第六行让视觉稳定
			if (line <= 5 && nextMonthPushDays > 0) {
				for (let i = line + 1; i <= 5; i++) {
					temp[i] = [];
					let start = nextMonthPushDays + (i - line - 1) * 7;
					for (let d = start; d <= start + 6; d++) {
						temp[i].push(Object.assign({ day: d, disabled: true },
						// this.getLunarInfo(this.computedNextYear(),this.computedNextMonth(true),d),
						isCurrentMonth ? this.getEvents(this.computedNextYear(), this.computedNextMonth(true), d) : {}, this.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, d)));
					}
				}
			}
			return temp;
		},
		touchmove(e) {
			//当屏幕有多个touch或者页面被缩放过，就不执行move操作
			if (e.targetTouches.length > 1 || e.scale && e.scale !== 1) return;
			let touch = e.targetTouches[0];
			this.endPos = { x: touch.pageX - this.startPos.x, y: touch.pageY - this.startPos.y };
			this.isScrolling = Math.abs(this.endPos.x) < Math.abs(this.endPos.y) ? 1 : 0; //isScrolling为1时，表示纵向滑动，0为横向滑动
			if (this.isScrolling === 0) {
				e.preventDefault(); //阻止触摸事件的默认行为，即阻止滚屏
				const x = this.translateX + this.endPos.x;
				this.wrapper.style.transform = "translateX(" + x + "px" + ")";
			}
		},
		touchend(e) {
			let duration = +new Date() - this.startPos.time; //滑动的持续时间
			if (this.isScrolling === 0) {
				//当为水平滚动时
				if (Number(duration) < 300 && Math.abs(this.endPos.x) > 30) {
					//  快速拖拽并松开
					if (this.endPos.x > 30) {
						this.wrapper.style.transition = "all 300ms ease";
						this.wrapper.style.transform = "translateX(" + 0 + "px)";
						this.resetTransition("left");
					} else if (this.endPos.x < -30) {
						this.wrapper.style.transition = "all 300ms ease";
						this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth * 2 + "px)";
						this.resetTransition("right");
					}
				} else if (Number(duration) >= 300) {
					//  持续拖拽
					if (Math.abs(this.endPos.x) > this.calendarBox.clientWidth / 2) {
						if (this.endPos.x > 0) {
							this.wrapper.style.transition = "all 300ms ease";
							this.wrapper.style.transform = "translateX(" + 0 + "px)";
							this.resetTransition("left");
						} else {
							this.wrapper.style.transition = "all 300ms ease";
							this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth * 2 + "px)";
							this.resetTransition("right");
						}
					} else {
						this.wrapper.style.transition = "all 300ms ease";
						this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth + "px)";
						this.resetTransition("none");
					}
				}
			}
			//解绑事件
			this.calendarBox.removeEventListener("touchmove", this.touchmove, false);
			this.calendarBox.removeEventListener("touchend", this.touchend, false);
		},
		resetTransition(dir) {
			window.setTimeout(() => {
				this.wrapper.style.transition = "";
				this.wrapper.style.transform = "translateX(" + -this.calendarBox.clientWidth + "px)";
				switch (dir) {
					case "left":
						let ldays = this.days;
						let lastDays = this.lastDays;
						let lmonth, lyear;
						if (this.month == 0) {
							lmonth = 11;
							lyear = parseInt(this.year) - 1;
						} else {
							lmonth = parseInt(this.month) - 1;
							lyear = this.year;
						}

						this.month = lmonth;
						this.year = lyear;
						// this.days = lastDays
						this.nextDays = ldays;
						this.lastDays = this.prev();
						this.$emit("monthChanged", this.year + "-" + this.zeroPad(this.month + 1));
						break;
					case "right":
						let rdays = this.days;
						let nextDays = this.nextDays;
						let rmonth, ryear;
						if (this.month == 11) {
							rmonth = 0;
							ryear = parseInt(this.year) + 1;
						} else {
							rmonth = parseInt(this.month) + 1;
							ryear = this.year;
						}
						this.month = rmonth;
						this.year = ryear;
						// this.days = nextDays
						this.lastDays = rdays;
						this.nextDays = this.next();
						this.$emit("monthChanged", this.year + "-" + this.zeroPad(this.month + 1));
						break;
					default:
						break;
				}
				this.days = this.render(this.year, this.month, true);
			}, 310);
		},
		computedPrevYear() {
			let value = this.year;
			if (this.month - 1 < 0) {
				value--;
			}
			return value;
		},
		computedPrevMonth(isString) {
			let value = this.month;
			if (this.month - 1 < 0) {
				value = 11;
			} else {
				value--;
			}
			// 用于显示目的（一般月份是从0开始的）
			if (isString) {
				return value + 1;
			}
			return value;
		},
		computedNextYear() {
			let value = this.year;
			if (this.month + 1 > 11) {
				value++;
			}
			return value;
		},
		computedNextMonth(isString) {
			let value = this.month;
			if (this.month + 1 > 11) {
				value = 0;
			} else {
				value++;
			}
			// 用于显示目的（一般月份是从0开始的）
			if (isString) {
				return value + 1;
			}
			return value;
		},
		// 获取农历信息
		// getLunarInfo(y,m,d) {
		//   let lunarInfo=calendar.solar2lunar(y,m,d)
		//   let lunarValue=lunarInfo.IDayCn
		//   let isLunarFestival=false
		//   let isGregorianFestival=false
		//   if(this.festival.lunar[lunarInfo.lMonth+"-"+lunarInfo.lDay]!=undefined) {
		//     lunarValue=this.festival.lunar[lunarInfo.lMonth+"-"+lunarInfo.lDay]
		//     isLunarFestival=true
		//   }else if(this.festival.gregorian[m+"-"+d]!=undefined){
		//     lunarValue=this.festival.gregorian[m+"-"+d]
		//     isGregorianFestival=true
		//   }
		//   return {
		//     lunar:lunarValue,
		//     isLunarFestival:isLunarFestival,
		//     isGregorianFestival:isGregorianFestival,
		//   }
		// },
		isToday(y, m, d) {
			let now = new Date();
			if (now.getFullYear() == y && now.getMonth() == m && now.getDate() == d) {
				return { "isToday": true };
			} else {
				return { "isToday": false };
			}
		},
		// 获取自定义事件
		getEvents(y, m, d) {
			if (this.events.length === 0) return false;
			let isContain = false;
			let eventTitle = "";
			let data = {};
			this.events.forEach(item => {
				let days = item.split("-");
				if (days.length == 3 && days[0] == y && Number(days[1]) == m + 1 && Number(days[2] == d)) {
					isContain = true;
				}
				if (days.length == 4 && days[0] == y && Number(days[1]) == m + 1 && Number(days[2] == d) && days[3]) {
					eventTitle = days[3];
				}
			});

			if (eventTitle) {
				data.eventTitle = eventTitle;
			}

			if (isContain) {
				data.eventName = isContain;
			}
			return data;
		},
		// 上月
		prev() {
			let month, year;
			if (this.month == 0) {
				month = 11;
				year = parseInt(this.year) - 1;
			} else {
				month = parseInt(this.month) - 1;
				year = this.year;
			}
			return this.render(year, month, false);
		},
		//  下月
		next() {
			let nextMonth, nextYear;
			if (this.month == 11) {
				nextMonth = 0;
				nextYear = parseInt(this.year) + 1;
			} else {
				nextMonth = parseInt(this.month) + 1;
				nextYear = this.year;
			}
			return this.render(nextYear, nextMonth, false);
		},
		// 选中日期
		select(k1, k2, e, child) {
			if (e != undefined) e.stopPropagation();
			// 取消上次选中
			if (this.selectedDate.length > 0) {
				this.days.forEach(v => {
					v.forEach(vv => {
						vv.selected = false;
					});
				});
				this.lastDays.forEach(v => {
					v.forEach(vv => {
						vv.selected = false;
					});
				});
				this.nextDays.forEach(v => {
					v.forEach(vv => {
						vv.selected = false;
					});
				});
			}
			// 设置当前选中天
			this.days[k1][k2].selected = true;
			// this.day = this.days[k1][k2].day
			this.selectedDate = [this.year, this.month, this.days[k1][k2].day];
			this.$emit("select", [this.year, this.zero ? this.zeroPad(this.month + 1) : this.month + 1, this.zero ? this.zeroPad(this.days[k1][k2].day) : this.days[k1][k2].day, child]);
		},
		// 返回今天
		setToday() {
			let now = new Date();
			this.year = now.getFullYear();
			this.month = now.getMonth();
			this.day = now.getDate();
			this.render(this.year, this.month, true);
			// 遍历当前日找到选中
			this.days.forEach(v => {
				let day = v.find(vv => {
					return vv.day == this.day && !vv.disabled;
				});
				if (day != undefined) {
					day.selected = true;
				}
			});
		},
		// 日期补零
		zeroPad(n) {
			return String(n < 10 ? "0" + n : n);
		},
		dateStyle(child) {
			if (child.selected) {
				return {
					"background-color": this.options.selected_bg_color,
					"color": "#fff"
				};
			} else if (child.isToday) {
				return {
					"background-color": this.options.today_bg_color,
					"color": "#fff"
				};
			}
			// else {
			//   return {
			//     "background-color": "#fff",
			//     "color": "#333"
			//   };
			// }
		}
	}
});

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__App_vue__ = __webpack_require__(2);

/* harmony default export */ __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__App_vue__["a" /* default */]);

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(0);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_7ba5bd90_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(9);
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(3)
}
var normalizeComponent = __webpack_require__(8)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-7ba5bd90"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_script_index_0_App_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_13_7_3_vue_loader_lib_template_compiler_index_id_data_v_7ba5bd90_hasScoped_true_buble_transforms_node_modules_vue_loader_13_7_3_vue_loader_lib_selector_type_template_index_0_App_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "src/App.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7ba5bd90", Component.options)
  } else {
    hotAPI.reload("data-v-7ba5bd90", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(4);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(6)("006af08d", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js?sourceMap!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7ba5bd90\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./App.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js?sourceMap!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7ba5bd90\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./App.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(true);
// imports


// module
exports.push([module.i, "\n.calendar[data-v-7ba5bd90] {\n  margin: 0.5rem;\n  width: 95%;\n  min-width: 300px;\n  background: #fff;\n  font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"STHeiti\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif;\n  user-select: none;\n  box-shadow: 0px 0px 16px 0px rgba(108, 108, 108, 0.17);\n  border-radius: 25px;\n}\n.calendar-header > ul[data-v-7ba5bd90] {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  font-size: 13px;\n  padding: 5px 0;\n}\n.calendar-info[data-v-7ba5bd90] {\n  padding: 9px;\n  font-size: 16px;\n  line-height: 1.3;\n  text-align: center;\n  display: flex;\n  border-radius: 25px;\n}\n.calendar-info > p[data-v-7ba5bd90] {\n  margin: 0.7rem 0 0 0;\n  font-size: 14px;\n  flex: 2;\n}\n.calendar-info > div.month .month-inner > span[data-v-7ba5bd90] {\n  display: block;\n  font-size: 14px;\n  height: 20px;\n  width: 100px;\n  overflow: hidden;\n  text-align: center;\n  flex: 1;\n}\n.calendar > .calendar-box[data-v-7ba5bd90] {\n  overflow-x: hidden;\n}\n.calendar > .calendar-box > .wrapper[data-v-7ba5bd90] {\n  display: -webkit-box;\n  width: 300%;\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: none;\n  overflow: -moz-scrollbars-none;\n}\n.calendar > .calendar-box > .wrapper[data-v-7ba5bd90]::-webkit-scrollbar {\n  width: 0 !important;\n}\n.calendar table[data-v-7ba5bd90] {\n  clear: both;\n  width: 33.333%;\n  border-collapse: collapse;\n  color: #444444;\n}\n.calendar td[data-v-7ba5bd90] {\n  width: 14.28571429%;\n  font-size: 14px;\n  cursor: pointer;\n  position: relative;\n  vertical-align: center;\n\n  padding: 0;\n  height: 40px;\n  text-align: center;\n}\n.calendar td.week[data-v-7ba5bd90] {\n  font-size: 10px;\n  pointer-events: none !important;\n  cursor: default !important;\n}\n.calendar td.disabled[data-v-7ba5bd90], .calendar td.disabled > span[data-v-7ba5bd90] {\n  color: #ccc;\n  pointer-events: none !important;\n  cursor: default !important;\n  /*opacity: 0;*/\n}\n.calendar td.disabled div[data-v-7ba5bd90] {\n  color: #ccc;\n}\n.calendar td > span[data-v-7ba5bd90]:first-child {\n  width: 70%;\n  margin: auto;\n  height: 70%;\n  border-radius: 50%;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /*color: #333;*/\n  font-size: 13px;\n}\n.calendar td:not(.selected) span[data-v-7ba5bd90]:not(.red):hover {\n  /*background: #f3f8fa;*/\n  /*color: #444;*/\n}\n.calendar td .dot[data-v-7ba5bd90] {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  text-align: center;\n  padding: 4px;\n  font-size: 8px;\n  line-height: 1.2;\n  color: #444;\n  width: 1px;\n  height: 1px;\n  background: #083ce4;\n  transform: translateX(-50%) scale(0.8);\n  border-radius: 50%;\n}\n.calendar td .dot-title[data-v-7ba5bd90] {\n  position: absolute;\n  bottom: -16%;\n  left: 50%;\n  text-align: center;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.2;\n  color: #083ce4;\n  transform: translateX(-50%) scale(0.8);\n  border-radius: 50%;\n}\n.calendar td .isGregorianFestival[data-v-7ba5bd90],\n.calendar td .isLunarFestival[data-v-7ba5bd90] {\n  color: #ea6151;\n}\n.calendar td.selected span.red[data-v-7ba5bd90] {\n  background-color: #ea6151;\n  color: #fff;\n}\n.calendar td.selected span.red[data-v-7ba5bd90]:hover {\n  background-color: #ea6151;\n  color: #fff;\n}\n.calendar thead td[data-v-7ba5bd90] {\n  text-transform: uppercase;\n  height: 30px;\n  vertical-align: middle;\n}\n.next-month[data-v-7ba5bd90] {\n  margin: 12px 10px;\n  border-top: 8px solid transparent;\n  border-bottom: 8px solid transparent;\n  border-left: 12px solid #ffa300;\n}\n.pre-month[data-v-7ba5bd90] {\n  margin: 12px 10px;\n  border-top: 8px solid transparent;\n  border-bottom: 8px solid transparent;\n  border-right: 12px solid #ffa300;\n}\n", "", {"version":3,"sources":["D:/Desktop/vue-calendar-L/src/src/App.vue"],"names":[],"mappings":";AAmoBA;EACA,eAAA;EACA,WAAA;EACA,iBAAA;EACA,iBAAA;EACA,gHAAA;EACA,kBAAA;EACA,uDAAA;EACA,oBAAA;CACA;AAEA;EACA,cAAA;EACA,8BAAA;EACA,oBAAA;EACA,gBAAA;EACA,eAAA;CACA;AAEA;EACA,aAAA;EACA,gBAAA;EACA,iBAAA;EACA,mBAAA;EACA,cAAA;EACA,oBAAA;CACA;AAEA;EACA,qBAAA;EACA,gBAAA;EACA,QAAA;CACA;AAEA;EACA,eAAA;EACA,gBAAA;EACA,aAAA;EACA,aAAA;EACA,iBAAA;EACA,mBAAA;EACA,QAAA;CACA;AAEA;EACA,mBAAA;CACA;AAEA;EACA,qBAAA;EACA,YAAA;EACA,kCAAA;EACA,yBAAA;EACA,+BAAA;CACA;AAEA;EACA,oBAAA;CACA;AAEA;EACA,YAAA;EACA,eAAA;EACA,0BAAA;EACA,eAAA;CACA;AAEA;EACA,oBAAA;EACA,gBAAA;EACA,gBAAA;EACA,mBAAA;EACA,uBAAA;;EAEA,WAAA;EACA,aAAA;EACA,mBAAA;CACA;AAEA;EACA,gBAAA;EACA,gCAAA;EACA,2BAAA;CACA;AAEA;EACA,YAAA;EACA,gCAAA;EACA,2BAAA;EACA,eAAA;CACA;AAEA;EACA,YAAA;CACA;AAEA;EACA,WAAA;EACA,aAAA;EACA,YAAA;EACA,mBAAA;EACA,mBAAA;EACA,cAAA;EACA,wBAAA;EACA,oBAAA;EACA,gBAAA;EACA,gBAAA;CACA;AAEA;EACA,wBAAA;EACA,gBAAA;CACA;AAEA;EACA,mBAAA;EACA,UAAA;EACA,UAAA;EACA,mBAAA;EACA,aAAA;EACA,eAAA;EACA,iBAAA;EACA,YAAA;EACA,WAAA;EACA,YAAA;EACA,oBAAA;EACA,uCAAA;EACA,mBAAA;CACA;AAEA;EACA,mBAAA;EACA,aAAA;EACA,UAAA;EACA,mBAAA;EACA,YAAA;EACA,gBAAA;EACA,iBAAA;EACA,eAAA;EACA,uCAAA;EACA,mBAAA;CACA;AAEA;;EAEA,eAAA;CACA;AAEA;EACA,0BAAA;EACA,YAAA;CACA;AAEA;EACA,0BAAA;EACA,YAAA;CACA;AAEA;EACA,0BAAA;EACA,aAAA;EACA,uBAAA;CACA;AAEA;EACA,kBAAA;EACA,kCAAA;EACA,qCAAA;EACA,gCAAA;CACA;AAEA;EACA,kBAAA;EACA,kCAAA;EACA,qCAAA;EACA,iCAAA;CACA","file":"App.vue","sourcesContent":["<template>\r\n  <div class=\"calendar\">\r\n    <div class=\"calendar-header\">\r\n      <div class=\"calendar-info\" :style=\"{'background-color': options.header_bg_color}\">\r\n        <span class=\"pre-month\" @click='preMonth'></span>\r\n        <transition name=\"fade\">\r\n          <p :style=\"{'color': options.header_font_color}\">{{ nowDay }}</p>\r\n        </transition>\r\n        <span class=\"next-month\" @click='nextMonth'></span>\r\n      </div>\r\n      <ul>\r\n        <li v-for=\"week in weeks\" class=\"week\" :style=\"{'color': options.week_font_color}\">{{week}}</li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"calendar-box\">\r\n      <div class=\"wrapper\">\r\n        <table cellpadding=\"5\" class=\"last-month\">\r\n          <tbody>\r\n          <tr v-for=\"(day,k1) in lastDays\" :key=\"k1\" style=\"{'animation-delay',(k1*30)+'ms'}\">\r\n            <td v-for=\"(child,k2) in day\" :key=\"k2\" :class=\"{'selected':child.selected,'disabled':child.disabled}\"\r\n                :style=\"{height: tdH + 'px'}\">\r\n              <span :style=\"dateStyle(child)\">{{child.day}}</span>\r\n              <span class=\"dot\" v-if=\"child.eventName\"></span>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <table cellpadding=\"5\" class=\"now-month\">\r\n          <tbody>\r\n          <tr v-for=\"(day,k1) in days\" style=\"{'animation-delay',(k1*30)+'ms'}\">\r\n            <td v-for=\"(child,k2) in day\" :class=\"{'selected':child.selected,'disabled':child.disabled}\"\r\n                :style=\"{height: tdH + 'px'}\" @click=\"select(k1,k2,$event,child)\">\r\n              <span :style=\"dateStyle(child)\">{{child.day}}</span>\r\n              <span class=\"dot-title\" :style=\"{color: options.event_dot_color}\" v-if=\"child.eventTitle\">{{child.eventTitle}}</span>\r\n              <span class=\"dot\" :style=\"{'background-color': options.event_dot_color}\"\r\n                    v-else-if=\"child.eventName\"></span>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <table cellpadding=\"5\" class=\"now-month\">\r\n          <tbody>\r\n          <tr v-for=\"(day,k1) in nextDays\" :key=\"k1\" style=\"{'animation-delay',(k1*30)+'ms'}\">\r\n            <td v-for=\"(child,k2) in day\" :key=\"k2\" :class=\"{'selected':child.selected,'disabled':child.disabled}\"\r\n                :style=\"{height: tdH + 'px'}\">\r\n              <span :style=\"dateStyle(child)\">{{child.day}}</span>\r\n              <span class=\"dot\" v-if=\"child.eventName\"></span>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: {\r\n\t\t\toptions: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\theader_bg_color: \"#ffffff\",\r\n\t\t\t\t\t\theader_font_color: \"#ffa300\",\r\n\t\t\t\t\t\tweek_font_color: \"#333333\",\r\n\t\t\t\t\t\tselected_bg_color: \"#f49f19\",\r\n\t\t\t\t\t\ttoday_bg_color: \"#f9d08f\",\r\n\t\t\t\t\t\tevent_dot_color: \"#083ce4\"\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 默认选择日期\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 开始选择日期\r\n\t\t\tbegin: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 结束选择日期\r\n\t\t\tend: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 是否小于10补零\r\n\t\t\tzero: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: true\r\n\t\t\t},\r\n\t\t\t// 屏蔽的日期\r\n\t\t\tdisabled: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 是否显示农历\r\n\t\t\tlunar: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t},\r\n\r\n\t\t\t// 自定义星期名称\r\n\t\t\tweeks: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn window.navigator.language.toLowerCase() == \"zh-cn\" ? [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"] : [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 自定义月份名称\r\n\t\t\tmonths: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn window.navigator.language.toLowerCase() == \"zh-cn\" ? [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"] : [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 自定义事件\r\n\t\t\tevents: {\r\n\t\t\t\ttype: Array,\r\n\t\t\t\tdefault: function() {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tyear: 0,\r\n\t\t\t\tmonth: 0,\r\n\t\t\t\tday: 0,\r\n\t\t\t\tdays: [],\r\n\t\t\t\tlastDays: [],\r\n\t\t\t\tnextDays: [],\r\n\t\t\t\tselectedDate: [],\r\n\t\t\t\tfestival: {\r\n\t\t\t\t\tlunar: {\r\n\t\t\t\t\t\t\"1-1\": \"春节\",\r\n\t\t\t\t\t\t\"1-15\": \"元宵节\",\r\n\t\t\t\t\t\t\"2-2\": \"龙头节\",\r\n\t\t\t\t\t\t\"5-5\": \"端午节\",\r\n\t\t\t\t\t\t\"7-7\": \"七夕节\",\r\n\t\t\t\t\t\t\"7-15\": \"中元节\",\r\n\t\t\t\t\t\t\"8-15\": \"中秋节\",\r\n\t\t\t\t\t\t\"9-9\": \"重阳节\",\r\n\t\t\t\t\t\t\"10-1\": \"寒衣节\",\r\n\t\t\t\t\t\t\"10-15\": \"下元节\",\r\n\t\t\t\t\t\t\"12-8\": \"腊八节\",\r\n\t\t\t\t\t\t\"12-23\": \"祭灶节\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tgregorian: {\r\n\t\t\t\t\t\t\"1-1\": \"元旦\",\r\n\t\t\t\t\t\t\"2-14\": \"情人节\",\r\n\t\t\t\t\t\t\"3-8\": \"妇女节\",\r\n\t\t\t\t\t\t\"3-12\": \"植树节\",\r\n\t\t\t\t\t\t\"4-5\": \"清明节\",\r\n\t\t\t\t\t\t\"5-1\": \"劳动节\",\r\n\t\t\t\t\t\t\"5-4\": \"青年节\",\r\n\t\t\t\t\t\t\"6-1\": \"儿童节\",\r\n\t\t\t\t\t\t\"7-1\": \"建党节\",\r\n\t\t\t\t\t\t\"8-1\": \"建军节\",\r\n\t\t\t\t\t\t\"9-10\": \"教师节\",\r\n\t\t\t\t\t\t\"10-1\": \"国庆节\",\r\n\t\t\t\t\t\t\"12-24\": \"平安夜\",\r\n\t\t\t\t\t\t\"12-25\": \"圣诞节\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tstartPos: {},\r\n\t\t\t\tendPos: {},\r\n\t\t\t\tisScrolling: 0,\r\n\t\t\t\ttranslateX: 0,\r\n\t\t\t\tcalendarBox: null,\r\n\t\t\t\twrapper: null,\r\n\t\t\t\ttdH: 46\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tnowDay() {\r\n\t\t\t\treturn this.year + \"-\" + this.zeroPad(parseInt(this.month) + 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tevents() {\r\n\t\t\t\tthis.days = this.render(this.year, this.month, true);\r\n\t\t\t},\r\n\t\t\tvalue() {\r\n\t\t\t\tthis.init();\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.calendarBox = document.getElementsByClassName(\"calendar-box\")[0];\r\n\t\t\tthis.wrapper = document.getElementsByClassName(\"wrapper\")[0];\r\n\t\t\tthis.init();\r\n\t\t\t// console.log(this.calendarBox.clientWidth);\r\n\t\t\tthis.tdH = Math.round(this.calendarBox.clientWidth / 7);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tpreMonth() {\r\n\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + 0 + \"px)\";\r\n\t\t\t\tthis.resetTransition(\"left\");\r\n\t\t\t},\r\n\t\t\tnextMonth() {\r\n\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth * 2 + \"px)\";\r\n\t\t\t\tthis.resetTransition(\"right\");\r\n\t\t\t},\r\n\t\t\tinit() {\r\n\t\t\t\tlet now = new Date();\r\n\t\t\t\tthis.year = now.getFullYear();\r\n\t\t\t\tthis.month = now.getMonth();\r\n\t\t\t\tthis.day = now.getDate();\r\n\t\t\t\tif (this.value.length > 0) {\r\n\t\t\t\t\tthis.year = parseInt(this.value[0]);\r\n\t\t\t\t\tthis.month = parseInt(this.value[1]) - 1;\r\n\t\t\t\t\tthis.day = parseInt(this.value[2]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.days = this.render(this.year, this.month, true);\r\n\t\t\t\tthis.nextDays = this.next();\r\n\t\t\t\tthis.lastDays = this.prev();\r\n\r\n\t\t\t\tthis.$emit(\"monthChanged\", this.year + \"-\" + this.zeroPad(this.month + 1));\r\n\r\n\t\t\t\t//  listener touch event\r\n\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth + \"px\" + \")\";\r\n\t\t\t\tthis.calendarBox.addEventListener(\"touchstart\", e => {\r\n\t\t\t\t\tthis.startPos = this.endPos = { x: 0, y: 0 };\r\n\t\t\t\t\tlet touch = e.targetTouches[0]; //touches数组对象获得屏幕上所有的touch，取第一个touch\r\n\t\t\t\t\tthis.startPos = { x: touch.pageX, y: touch.pageY, time: +new Date }; //取第一个touch的坐标值\r\n\t\t\t\t\tconst tranStr = this.wrapper.style.transform;\r\n\t\t\t\t\tif (tranStr) {\r\n\t\t\t\t\t\tthis.translateX = Number(tranStr.substring(11, tranStr.length - 3));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.translateX = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.calendarBox.addEventListener(\"touchmove\", this.touchmove, false);\r\n\t\t\t\t\tthis.calendarBox.addEventListener(\"touchend\", this.touchend, false);\r\n\t\t\t\t}, false);\r\n\t\t\t},\r\n\t\t\t// 渲染日期\r\n\t\t\trender(y, m, isCurrentMonth = false) {\r\n\t\t\t\tlet firstDayOfMonth = new Date(y, m, 1).getDay();         //当月第一天\r\n\t\t\t\tlet lastDateOfMonth = new Date(y, m + 1, 0).getDate();    //当月最后一天\r\n\t\t\t\tlet lastDayOfLastMonth = new Date(y, m, 0).getDate();     //最后一月的最后一天\r\n\t\t\t\tlet i, line = 0, temp = [], nextMonthPushDays = 1;\r\n\t\t\t\tfor (i = 1; i <= lastDateOfMonth; i++) {\r\n\t\t\t\t\tlet day = new Date(y, m, i).getDay(); //返回星期几（0～6）\r\n\t\t\t\t\tlet k;\r\n\t\t\t\t\t// 第一行\r\n\t\t\t\t\tif (day == 0) {\r\n\t\t\t\t\t\ttemp[line] = [];\r\n\t\t\t\t\t} else if (i == 1) {\r\n\t\t\t\t\t\ttemp[line] = [];\r\n\t\t\t\t\t\tk = lastDayOfLastMonth - firstDayOfMonth + 1;\r\n\t\t\t\t\t\tfor (let j = 0; j < firstDayOfMonth; j++) {\r\n\t\t\t\t\t\t\ttemp[line].push(Object.assign(\r\n\t\t\t\t\t\t\t\t\t{ day: k, disabled: true },\r\n\t\t\t\t\t\t\t\t\t// this.getLunarInfo(this.computedPrevYear(),this.computedPrevMonth(true),k),\r\n\t\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(this.computedPrevYear(), this.computedPrevMonth(true), k) : {},\r\n\t\t\t\t\t\t\t\t\tthis.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, k)\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\tk++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet chk = new Date();\r\n\t\t\t\t\tlet chkY = chk.getFullYear();\r\n\t\t\t\t\tlet chkM = chk.getMonth();\r\n\t\t\t\t\tlet chkD = chk.getDate();\r\n\t\t\t\t\t// 匹配上次选中的日期\r\n\t\t\t\t\tif (this.selectedDate.length == 3 && y == this.selectedDate[0] && m == this.selectedDate[1] && i == this.selectedDate[2]) {\r\n\t\t\t\t\t\ttemp[line].push(Object.assign(\r\n\t\t\t\t\t\t\t\t{ day: i, selected: true },\r\n\t\t\t\t\t\t\t\t// this.getLunarInfo(y, m, i),\r\n\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(y, m, i) : {},\r\n\t\t\t\t\t\t\t\tthis.isToday(y, m, i)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t} else if (this.selectedDate.length != 3 && chkY == this.year && chkM == this.month && i == this.day && this.value.length === 0) {    // 没有默认值的时候显示选中今天日期\r\n\t\t\t\t\t\ttemp[line].push(Object.assign(\r\n\t\t\t\t\t\t\t\t{ day: i, selected: true },\r\n\t\t\t\t\t\t\t\t// this.getLunarInfo(y, m, i),\r\n\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(y, m, i) : {},\r\n\t\t\t\t\t\t\t\tthis.isToday(y, m, i)\r\n\t\t\t\t\t\t));\r\n\t\t\t\t\t\tthis.selectedDate = [this.year, this.month, this.day];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 普通日期\r\n\t\t\t\t\t\tlet options = Object.assign(\r\n\t\t\t\t\t\t\t\t{ day: i, selected: false },\r\n\t\t\t\t\t\t\t\t// this.getLunarInfo(y, m, i),\r\n\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(y, m, i) : {},\r\n\t\t\t\t\t\t\t\tthis.isToday(y, m, i)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (this.begin.length > 0) {\r\n\t\t\t\t\t\t\tlet beginTime = Number(new Date(parseInt(this.begin[0]), parseInt(this.begin[1]), parseInt(this.begin[2])));\r\n\t\t\t\t\t\t\tif (beginTime > Number(new Date(this.year, this.month, i))) options.disabled = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.end.length > 0) {\r\n\t\t\t\t\t\t\tlet endTime = Number(new Date(parseInt(this.end[0]), parseInt(this.end[1]) - 1, parseInt(this.end[2])));\r\n\t\t\t\t\t\t\tif (endTime < Number(new Date(this.year, this.month, i))) options.disabled = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.disabled.length > 0) {\r\n\t\t\t\t\t\t\tif (this.disabled.filter(v => {\r\n\t\t\t\t\t\t\t\treturn this.year === v[0] && this.month === v[1] - 1 && i === v[2];\r\n\t\t\t\t\t\t\t}).length > 0) {\r\n\t\t\t\t\t\t\t\toptions.disabled = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if(Number(new Date(this.year, this.month, i)) < Number(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()))){\r\n\t\t\t\t\t\t//   options.disabled = true;\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\ttemp[line].push(options);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 到周六换行\r\n\t\t\t\t\tif (day == 6 && i < lastDateOfMonth) {\r\n\t\t\t\t\t\tline++;\r\n\t\t\t\t\t} else if (i == lastDateOfMonth) {\r\n\t\t\t\t\t\t// line++\r\n\t\t\t\t\t\tlet k = 1;\r\n\t\t\t\t\t\tfor (let d = day; d < 6; d++) {\r\n\t\t\t\t\t\t\ttemp[line].push(Object.assign(\r\n\t\t\t\t\t\t\t\t\t{ day: k, disabled: true },\r\n\t\t\t\t\t\t\t\t\t// this.getLunarInfo(this.computedNextYear(),this.computedNextMonth(true),k),\r\n\t\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(this.computedNextYear(), this.computedNextMonth(true), k) : {},\r\n\t\t\t\t\t\t\t\t\tthis.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, d)\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\tk++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 下个月除了补充的前几天开始的日期\r\n\t\t\t\t\t\tnextMonthPushDays = k;\r\n\t\t\t\t\t}\r\n\t\t\t\t} //end for\r\n\r\n\t\t\t\t// 补充第六行让视觉稳定\r\n\t\t\t\tif (line <= 5 && nextMonthPushDays > 0) {\r\n\t\t\t\t\tfor (let i = line + 1; i <= 5; i++) {\r\n\t\t\t\t\t\ttemp[i] = [];\r\n\t\t\t\t\t\tlet start = nextMonthPushDays + (i - line - 1) * 7;\r\n\t\t\t\t\t\tfor (let d = start; d <= start + 6; d++) {\r\n\t\t\t\t\t\t\ttemp[i].push(Object.assign(\r\n\t\t\t\t\t\t\t\t\t{ day: d, disabled: true },\r\n\t\t\t\t\t\t\t\t\t// this.getLunarInfo(this.computedNextYear(),this.computedNextMonth(true),d),\r\n\t\t\t\t\t\t\t\t\tisCurrentMonth ? this.getEvents(this.computedNextYear(), this.computedNextMonth(true), d) : {},\r\n\t\t\t\t\t\t\t\t\tthis.isToday(this.computedNextYear(), this.computedNextMonth(true) + 1, d)\r\n\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn temp;\r\n\t\t\t},\r\n\t\t\ttouchmove(e) {\r\n\t\t\t\t//当屏幕有多个touch或者页面被缩放过，就不执行move操作\r\n\t\t\t\tif (e.targetTouches.length > 1 || e.scale && e.scale !== 1) return;\r\n\t\t\t\tlet touch = e.targetTouches[0];\r\n\t\t\t\tthis.endPos = { x: touch.pageX - this.startPos.x, y: touch.pageY - this.startPos.y };\r\n\t\t\t\tthis.isScrolling = Math.abs(this.endPos.x) < Math.abs(this.endPos.y) ? 1 : 0; //isScrolling为1时，表示纵向滑动，0为横向滑动\r\n\t\t\t\tif (this.isScrolling === 0) {\r\n\t\t\t\t\te.preventDefault(); //阻止触摸事件的默认行为，即阻止滚屏\r\n\t\t\t\t\tconst x = this.translateX + this.endPos.x;\r\n\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + x + \"px\" + \")\";\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttouchend(e) {\r\n\t\t\t\tlet duration = +new Date - this.startPos.time; //滑动的持续时间\r\n\t\t\t\tif (this.isScrolling === 0) { //当为水平滚动时\r\n\t\t\t\t\tif (Number(duration) < 300 && Math.abs(this.endPos.x) > 30) {     //  快速拖拽并松开\r\n\t\t\t\t\t\tif (this.endPos.x > 30) {\r\n\t\t\t\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + 0 + \"px)\";\r\n\t\t\t\t\t\t\tthis.resetTransition(\"left\");\r\n\t\t\t\t\t\t} else if (this.endPos.x < -30) {\r\n\t\t\t\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth * 2 + \"px)\";\r\n\t\t\t\t\t\t\tthis.resetTransition(\"right\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (Number(duration) >= 300) {    //  持续拖拽\r\n\t\t\t\t\t\tif (Math.abs(this.endPos.x) > this.calendarBox.clientWidth / 2) {\r\n\t\t\t\t\t\t\tif (this.endPos.x > 0) {\r\n\t\t\t\t\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + 0 + \"px)\";\r\n\t\t\t\t\t\t\t\tthis.resetTransition(\"left\");\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth * 2 + \"px)\";\r\n\t\t\t\t\t\t\t\tthis.resetTransition(\"right\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.wrapper.style.transition = \"all 300ms ease\";\r\n\t\t\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth + \"px)\";\r\n\t\t\t\t\t\t\tthis.resetTransition(\"none\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//解绑事件\r\n\t\t\t\tthis.calendarBox.removeEventListener(\"touchmove\", this.touchmove, false);\r\n\t\t\t\tthis.calendarBox.removeEventListener(\"touchend\", this.touchend, false);\r\n\t\t\t},\r\n\t\t\tresetTransition(dir) {\r\n\t\t\t\twindow.setTimeout(() => {\r\n\t\t\t\t\tthis.wrapper.style.transition = \"\";\r\n\t\t\t\t\tthis.wrapper.style.transform = \"translateX(\" + -this.calendarBox.clientWidth + \"px)\";\r\n\t\t\t\t\tswitch (dir) {\r\n\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\tlet ldays = this.days;\r\n\t\t\t\t\t\t\tlet lastDays = this.lastDays;\r\n\t\t\t\t\t\t\tlet lmonth, lyear;\r\n\t\t\t\t\t\t\tif (this.month == 0) {\r\n\t\t\t\t\t\t\t\tlmonth = 11;\r\n\t\t\t\t\t\t\t\tlyear = parseInt(this.year) - 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlmonth = parseInt(this.month) - 1;\r\n\t\t\t\t\t\t\t\tlyear = this.year;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.month = lmonth;\r\n\t\t\t\t\t\t\tthis.year = lyear;\r\n\t\t\t\t\t\t\t// this.days = lastDays\r\n\t\t\t\t\t\t\tthis.nextDays = ldays;\r\n\t\t\t\t\t\t\tthis.lastDays = this.prev();\r\n\t\t\t\t\t\t\tthis.$emit(\"monthChanged\", this.year + \"-\" + this.zeroPad(this.month + 1));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\tlet rdays = this.days;\r\n\t\t\t\t\t\t\tlet nextDays = this.nextDays;\r\n\t\t\t\t\t\t\tlet rmonth, ryear;\r\n\t\t\t\t\t\t\tif (this.month == 11) {\r\n\t\t\t\t\t\t\t\trmonth = 0;\r\n\t\t\t\t\t\t\t\tryear = parseInt(this.year) + 1;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trmonth = parseInt(this.month) + 1;\r\n\t\t\t\t\t\t\t\tryear = this.year;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.month = rmonth;\r\n\t\t\t\t\t\t\tthis.year = ryear;\r\n\t\t\t\t\t\t\t// this.days = nextDays\r\n\t\t\t\t\t\t\tthis.lastDays = rdays;\r\n\t\t\t\t\t\t\tthis.nextDays = this.next();\r\n\t\t\t\t\t\t\tthis.$emit(\"monthChanged\", this.year + \"-\" + this.zeroPad(this.month + 1));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.days = this.render(this.year, this.month, true);\r\n\t\t\t\t}, 310);\r\n\t\t\t},\r\n\t\t\tcomputedPrevYear() {\r\n\t\t\t\tlet value = this.year;\r\n\t\t\t\tif (this.month - 1 < 0) {\r\n\t\t\t\t\tvalue--;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\tcomputedPrevMonth(isString) {\r\n\t\t\t\tlet value = this.month;\r\n\t\t\t\tif (this.month - 1 < 0) {\r\n\t\t\t\t\tvalue = 11;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue--;\r\n\t\t\t\t}\r\n\t\t\t\t// 用于显示目的（一般月份是从0开始的）\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\treturn value + 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\tcomputedNextYear() {\r\n\t\t\t\tlet value = this.year;\r\n\t\t\t\tif (this.month + 1 > 11) {\r\n\t\t\t\t\tvalue++;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\tcomputedNextMonth(isString) {\r\n\t\t\t\tlet value = this.month;\r\n\t\t\t\tif (this.month + 1 > 11) {\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue++;\r\n\t\t\t\t}\r\n\t\t\t\t// 用于显示目的（一般月份是从0开始的）\r\n\t\t\t\tif (isString) {\r\n\t\t\t\t\treturn value + 1;\r\n\t\t\t\t}\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\t\t\t// 获取农历信息\r\n\t\t\t// getLunarInfo(y,m,d) {\r\n\t\t\t//   let lunarInfo=calendar.solar2lunar(y,m,d)\r\n\t\t\t//   let lunarValue=lunarInfo.IDayCn\r\n\t\t\t//   let isLunarFestival=false\r\n\t\t\t//   let isGregorianFestival=false\r\n\t\t\t//   if(this.festival.lunar[lunarInfo.lMonth+\"-\"+lunarInfo.lDay]!=undefined) {\r\n\t\t\t//     lunarValue=this.festival.lunar[lunarInfo.lMonth+\"-\"+lunarInfo.lDay]\r\n\t\t\t//     isLunarFestival=true\r\n\t\t\t//   }else if(this.festival.gregorian[m+\"-\"+d]!=undefined){\r\n\t\t\t//     lunarValue=this.festival.gregorian[m+\"-\"+d]\r\n\t\t\t//     isGregorianFestival=true\r\n\t\t\t//   }\r\n\t\t\t//   return {\r\n\t\t\t//     lunar:lunarValue,\r\n\t\t\t//     isLunarFestival:isLunarFestival,\r\n\t\t\t//     isGregorianFestival:isGregorianFestival,\r\n\t\t\t//   }\r\n\t\t\t// },\r\n\t\t\tisToday(y, m, d) {\r\n\t\t\t\tlet now = new Date();\r\n\t\t\t\tif (now.getFullYear() == y && now.getMonth() == m && now.getDate() == d) {\r\n\t\t\t\t\treturn { \"isToday\": true };\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { \"isToday\": false };\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 获取自定义事件\r\n\t\t\tgetEvents(y, m, d) {\r\n\t\t\t\tif (this.events.length === 0) return false;\r\n\t\t\t\tlet isContain = false;\r\n\t\t\t\tlet eventTitle = \"\";\r\n\t\t\t\tlet data = {};\r\n\t\t\t\tthis.events.forEach(item => {\r\n\t\t\t\t\tlet days = item.split(\"-\");\r\n\t\t\t\t\tif (days.length == 3 && days[0] == y && Number(days[1]) == (m + 1) && Number(days[2] == d)) {\r\n\t\t\t\t\t\tisContain = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (days.length == 4 && days[0] == y && Number(days[1]) == (m + 1) && Number(days[2] == d) && days[3]) {\r\n\t\t\t\t\t\teventTitle = days[3];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (eventTitle) {\r\n\t\t\t\t\tdata.eventTitle = eventTitle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isContain) {\r\n\t\t\t\t\tdata.eventName = isContain;\r\n\t\t\t\t}\r\n\t\t\t\treturn data;\r\n\t\t\t},\r\n\t\t\t// 上月\r\n\t\t\tprev() {\r\n\t\t\t\tlet month, year;\r\n\t\t\t\tif (this.month == 0) {\r\n\t\t\t\t\tmonth = 11;\r\n\t\t\t\t\tyear = parseInt(this.year) - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmonth = parseInt(this.month) - 1;\r\n\t\t\t\t\tyear = this.year;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.render(year, month, false);\r\n\t\t\t},\r\n\t\t\t//  下月\r\n\t\t\tnext() {\r\n\t\t\t\tlet nextMonth, nextYear;\r\n\t\t\t\tif (this.month == 11) {\r\n\t\t\t\t\tnextMonth = 0;\r\n\t\t\t\t\tnextYear = parseInt(this.year) + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextMonth = parseInt(this.month) + 1;\r\n\t\t\t\t\tnextYear = this.year;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.render(nextYear, nextMonth, false);\r\n\t\t\t},\r\n\t\t\t// 选中日期\r\n\t\t\tselect(k1, k2, e, child) {\r\n\t\t\t\tif (e != undefined) e.stopPropagation();\r\n\t\t\t\t// 取消上次选中\r\n\t\t\t\tif (this.selectedDate.length > 0) {\r\n\t\t\t\t\tthis.days.forEach(v => {\r\n\t\t\t\t\t\tv.forEach(vv => {\r\n\t\t\t\t\t\t\tvv.selected = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.lastDays.forEach(v => {\r\n\t\t\t\t\t\tv.forEach(vv => {\r\n\t\t\t\t\t\t\tvv.selected = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.nextDays.forEach(v => {\r\n\t\t\t\t\t\tv.forEach(vv => {\r\n\t\t\t\t\t\t\tvv.selected = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// 设置当前选中天\r\n\t\t\t\tthis.days[k1][k2].selected = true;\r\n\t\t\t\t// this.day = this.days[k1][k2].day\r\n\t\t\t\tthis.selectedDate = [this.year, this.month, this.days[k1][k2].day];\r\n\t\t\t\tthis.$emit(\"select\", [this.year, this.zero ? this.zeroPad(this.month + 1) : this.month + 1, this.zero ? this.zeroPad(this.days[k1][k2].day) : this.days[k1][k2].day, child]);\r\n\t\t\t},\r\n\t\t\t// 返回今天\r\n\t\t\tsetToday() {\r\n\t\t\t\tlet now = new Date();\r\n\t\t\t\tthis.year = now.getFullYear();\r\n\t\t\t\tthis.month = now.getMonth();\r\n\t\t\t\tthis.day = now.getDate();\r\n\t\t\t\tthis.render(this.year, this.month, true);\r\n\t\t\t\t// 遍历当前日找到选中\r\n\t\t\t\tthis.days.forEach(v => {\r\n\t\t\t\t\tlet day = v.find(vv => {\r\n\t\t\t\t\t\treturn vv.day == this.day && !vv.disabled;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (day != undefined) {\r\n\t\t\t\t\t\tday.selected = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 日期补零\r\n\t\t\tzeroPad(n) {\r\n\t\t\t\treturn String(n < 10 ? \"0\" + n : n);\r\n\t\t\t},\r\n\t\t\tdateStyle(child) {\r\n\t\t\t\tif (child.selected) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\"background-color\": this.options.selected_bg_color,\r\n\t\t\t\t\t\t\"color\": \"#fff\"\r\n\t\t\t\t\t};\r\n\t\t\t\t} else if (child.isToday) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\"background-color\": this.options.today_bg_color,\r\n\t\t\t\t\t\t\"color\": \"#fff\"\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t//   return {\r\n\t\t\t\t//     \"background-color\": \"#fff\",\r\n\t\t\t\t//     \"color\": \"#333\"\r\n\t\t\t\t//   };\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n  .calendar {\r\n    margin: 0.5rem;\r\n    width: 95%;\r\n    min-width: 300px;\r\n    background: #fff;\r\n    font-family: \"PingFang SC\", \"Hiragino Sans GB\", \"STHeiti\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif;\r\n    user-select: none;\r\n    box-shadow: 0px 0px 16px 0px rgba(108, 108, 108, 0.17);\r\n    border-radius: 25px;\r\n  }\r\n\r\n  .calendar-header > ul {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 13px;\r\n    padding: 5px 0;\r\n  }\r\n\r\n  .calendar-info {\r\n    padding: 9px;\r\n    font-size: 16px;\r\n    line-height: 1.3;\r\n    text-align: center;\r\n    display: flex;\r\n    border-radius: 25px;\r\n  }\r\n\r\n  .calendar-info > p {\r\n    margin: 0.7rem 0 0 0;\r\n    font-size: 14px;\r\n    flex: 2;\r\n  }\r\n\r\n  .calendar-info > div.month .month-inner > span {\r\n    display: block;\r\n    font-size: 14px;\r\n    height: 20px;\r\n    width: 100px;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    flex: 1;\r\n  }\r\n\r\n  .calendar > .calendar-box {\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .calendar > .calendar-box > .wrapper {\r\n    display: -webkit-box;\r\n    width: 300%;\r\n    -webkit-overflow-scrolling: touch;\r\n    -ms-overflow-style: none;\r\n    overflow: -moz-scrollbars-none;\r\n  }\r\n\r\n  .calendar > .calendar-box > .wrapper::-webkit-scrollbar {\r\n    width: 0 !important;\r\n  }\r\n\r\n  .calendar table {\r\n    clear: both;\r\n    width: 33.333%;\r\n    border-collapse: collapse;\r\n    color: #444444;\r\n  }\r\n\r\n  .calendar td {\r\n    width: 14.28571429%;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    vertical-align: center;\r\n\r\n    padding: 0;\r\n    height: 40px;\r\n    text-align: center;\r\n  }\r\n\r\n  .calendar td.week {\r\n    font-size: 10px;\r\n    pointer-events: none !important;\r\n    cursor: default !important;\r\n  }\r\n\r\n  .calendar td.disabled, .calendar td.disabled > span {\r\n    color: #ccc;\r\n    pointer-events: none !important;\r\n    cursor: default !important;\r\n    /*opacity: 0;*/\r\n  }\r\n\r\n  .calendar td.disabled div {\r\n    color: #ccc;\r\n  }\r\n\r\n  .calendar td > span:first-child {\r\n    width: 70%;\r\n    margin: auto;\r\n    height: 70%;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /*color: #333;*/\r\n    font-size: 13px;\r\n  }\r\n\r\n  .calendar td:not(.selected) span:not(.red):hover {\r\n    /*background: #f3f8fa;*/\r\n    /*color: #444;*/\r\n  }\r\n\r\n  .calendar td .dot {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    text-align: center;\r\n    padding: 4px;\r\n    font-size: 8px;\r\n    line-height: 1.2;\r\n    color: #444;\r\n    width: 1px;\r\n    height: 1px;\r\n    background: #083ce4;\r\n    transform: translateX(-50%) scale(0.8);\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .calendar td .dot-title {\r\n    position: absolute;\r\n    bottom: -16%;\r\n    left: 50%;\r\n    text-align: center;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n    color: #083ce4;\r\n    transform: translateX(-50%) scale(0.8);\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .calendar td .isGregorianFestival,\r\n  .calendar td .isLunarFestival {\r\n    color: #ea6151;\r\n  }\r\n\r\n  .calendar td.selected span.red {\r\n    background-color: #ea6151;\r\n    color: #fff;\r\n  }\r\n\r\n  .calendar td.selected span.red:hover {\r\n    background-color: #ea6151;\r\n    color: #fff;\r\n  }\r\n\r\n  .calendar thead td {\r\n    text-transform: uppercase;\r\n    height: 30px;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .next-month {\r\n    margin: 12px 10px;\r\n    border-top: 8px solid transparent;\r\n    border-bottom: 8px solid transparent;\r\n    border-left: 12px solid #ffa300;\r\n  }\r\n\r\n  .pre-month {\r\n    margin: 12px 10px;\r\n    border-top: 8px solid transparent;\r\n    border-bottom: 8px solid transparent;\r\n    border-right: 12px solid #ffa300;\r\n  }\r\n</style>\r\n"],"sourceRoot":""}]);

// exports


/***/ }),
/* 5 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(7)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 7 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 8 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "calendar" }, [
    _c("div", { staticClass: "calendar-header" }, [
      _c(
        "div",
        {
          staticClass: "calendar-info",
          style: { "background-color": _vm.options.header_bg_color }
        },
        [
          _c("span", { staticClass: "pre-month", on: { click: _vm.preMonth } }),
          _vm._v(" "),
          _c("transition", { attrs: { name: "fade" } }, [
            _c("p", { style: { color: _vm.options.header_font_color } }, [
              _vm._v(_vm._s(_vm.nowDay))
            ])
          ]),
          _vm._v(" "),
          _c("span", {
            staticClass: "next-month",
            on: { click: _vm.nextMonth }
          })
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "ul",
        _vm._l(_vm.weeks, function(week) {
          return _c(
            "li",
            {
              staticClass: "week",
              style: { color: _vm.options.week_font_color }
            },
            [_vm._v(_vm._s(week))]
          )
        }),
        0
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "calendar-box" }, [
      _c("div", { staticClass: "wrapper" }, [
        _c(
          "table",
          { staticClass: "last-month", attrs: { cellpadding: "5" } },
          [
            _c(
              "tbody",
              _vm._l(_vm.lastDays, function(day, k1) {
                return _c(
                  "tr",
                  { key: k1, staticStyle: {} },
                  _vm._l(day, function(child, k2) {
                    return _c(
                      "td",
                      {
                        key: k2,
                        class: {
                          selected: child.selected,
                          disabled: child.disabled
                        },
                        style: { height: _vm.tdH + "px" }
                      },
                      [
                        _c("span", { style: _vm.dateStyle(child) }, [
                          _vm._v(_vm._s(child.day))
                        ]),
                        _vm._v(" "),
                        child.eventName
                          ? _c("span", { staticClass: "dot" })
                          : _vm._e()
                      ]
                    )
                  }),
                  0
                )
              }),
              0
            )
          ]
        ),
        _vm._v(" "),
        _c("table", { staticClass: "now-month", attrs: { cellpadding: "5" } }, [
          _c(
            "tbody",
            _vm._l(_vm.days, function(day, k1) {
              return _c(
                "tr",
                { staticStyle: {} },
                _vm._l(day, function(child, k2) {
                  return _c(
                    "td",
                    {
                      class: {
                        selected: child.selected,
                        disabled: child.disabled
                      },
                      style: { height: _vm.tdH + "px" },
                      on: {
                        click: function($event) {
                          return _vm.select(k1, k2, $event, child)
                        }
                      }
                    },
                    [
                      _c("span", { style: _vm.dateStyle(child) }, [
                        _vm._v(_vm._s(child.day))
                      ]),
                      _vm._v(" "),
                      child.eventTitle
                        ? _c(
                            "span",
                            {
                              staticClass: "dot-title",
                              style: { color: _vm.options.event_dot_color }
                            },
                            [_vm._v(_vm._s(child.eventTitle))]
                          )
                        : child.eventName
                        ? _c("span", {
                            staticClass: "dot",
                            style: {
                              "background-color": _vm.options.event_dot_color
                            }
                          })
                        : _vm._e()
                    ]
                  )
                }),
                0
              )
            }),
            0
          )
        ]),
        _vm._v(" "),
        _c("table", { staticClass: "now-month", attrs: { cellpadding: "5" } }, [
          _c(
            "tbody",
            _vm._l(_vm.nextDays, function(day, k1) {
              return _c(
                "tr",
                { key: k1, staticStyle: {} },
                _vm._l(day, function(child, k2) {
                  return _c(
                    "td",
                    {
                      key: k2,
                      class: {
                        selected: child.selected,
                        disabled: child.disabled
                      },
                      style: { height: _vm.tdH + "px" }
                    },
                    [
                      _c("span", { style: _vm.dateStyle(child) }, [
                        _vm._v(_vm._s(child.day))
                      ]),
                      _vm._v(" "),
                      child.eventName
                        ? _c("span", { staticClass: "dot" })
                        : _vm._e()
                    ]
                  )
                }),
                0
              )
            }),
            0
          )
        ])
      ])
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);
if (false) {
  module.hot.accept()
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api")      .rerender("data-v-7ba5bd90", esExports)
  }
}

/***/ })
/******/ ]);
});
//# sourceMappingURL=calendar.min.js.map